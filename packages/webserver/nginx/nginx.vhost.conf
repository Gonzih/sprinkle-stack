# sprinkled: nginx.vhost.conf v1

# when adding new apps, make sure to rotate any log files they might generate
http {
  server {
    listen 80;
    server_name <%= app %>;

    <% if defined?(deploy_to) %>
    root <%= deploy_to %>/current/public;
    <% else %>
    root /var/www/app/current/public;
    <% end %>

    <% if defined?(rack_env) || defined?(rails_env) %>
    rack_env <%= rack_env || rails_env %>;
    <% end %>

    <% if defined?(shared_path) %>
    access_log  <%= File.join(shared_path, 'log', 'nginx.access.log') %>;
    error_log   <%= File.join(shared_path, 'log', 'nginx.error.log') %>;
    <% end %>

    passenger_enabled on;
    passenger_use_global_queue on;
    # passenger_min_instances 10;

    client_max_body_size 10M;

    # serve static files without running more rewrite tests
    if (-f $request_filename) {
      break;
    }

    # expires headers
    location ~* \.(css|js|gif|jp?g|png|ico|swf|htc)(\?[0-9]+)?$ {
      access_log off;
      expires max;
      break;
    }

    # block bots who like track urls (PHP usually)
    location ~ \.php$ {
      deny all;
    }

    error_page   500 502 504  /500.html;
    location = /50x.html {
      root html;
    }

    # 503 -> static for POSTs could cause 405
    recursive_error_pages on;

    # Maintenance page handle
    if (-f $document_root/system/maintenance/index.html) {
      return 503;
    }

    error_page 503 @503;
    location @503 {
      error_page 405 = /system/maintenance/index.html;

      # Serve static assets if found.
      if (-f $request_filename) {
        break;
      }

      if (-f $document_root/system/maintenance/index.html) {
        rewrite ^(.*)$ /system/maintenance/index.html break;
      }

      rewrite ^(.*)$ /503.html break;
    }

    # redirect www to non-www
    if ($host ~* www\.(.*)) {
      set $host_without_www $1;
      rewrite ^(.*)$ http://$host_without_www$1 permanent;
    }
  }
}